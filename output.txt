begin main...
parsing args...
begin test...
HMM_FILENAME: data/test_cases/87kDa_TransP.hmm
FASTA_FILENAME: data/test_cases/87kDa_TransP.fa
ALPHA: 30.000000
BETA: 5

building hmm profile...
building profile object...
configuring...
MODE: Uni-local
building query sequence...

===== SEQ ============================================
	    NAME:	87KDA_TRANSP/157/27-139/163-269 DOMAINS: Q1KZX7_ANOGA/645-757 Q1KZX8_ANOGA/654-760
	  LENGTH:	287
	SEQUENCE:	GNQDPRSIANKRQSTKLFKGKETINKPSTFSCTDEYISSQIRTSIEIENEGSEQANDGDIISASIITSALNQPPVKQSIQSDTLSSRSSEMLSSVSSSAIELPEQDSDGLEYIMGYIGRQCFEKFPHLNLGNLSLNLNSNLILMIEIVLGMALAIFPGSILINNKKNIEPDVFVTSADFENETDQLNEICVSQEHYVSATIFHEAEIVPSLLDFDATDADDEFSATNFDSLFILNEQEKDGLEYIIGYIGRKFRDKYPYLGQYTCNLTEELYFYRGTYAAQHDSDPV
======================================================

I/O was successful!

test
test
test
test
=== VITERBI -> START ===
Viterbi Score: 0.540254
=== VITERBI -> END ===

=== TRACEBACK -> START ===
ST_C:	(287,0)  	4.472080
ST_C:	(286,0)  	4.491882
ST_C:	(285,0)  	4.511685
ST_C:	(284,0)  	4.531487
ST_C:	(283,0)  	4.551290
ST_C:	(282,0)  	4.571093
ST_C:	(281,0)  	4.590895
ST_C:	(280,0)  	4.610698
ST_C:	(279,0)  	4.630500
ST_C:	(278,0)  	4.650303
ST_C:	(277,0)  	4.670105
ST_C:	(276,0)  	4.689908
ST_C:	(275,0)  	4.709711
ST_C:	(274,0)  	4.729513
ST_C:	(273,0)  	4.749316
ST_C:	(272,0)  	4.769118
ST_C:	(271,0)  	4.788921
ST_C:	(270,0)  	4.808723
ST_C:	(269,0)  	4.828526
ST_C:	(268,0)  	4.848329
ST_C:	(267,0)  	4.868131
ST_C:	(266,0)  	4.887934
ST_C:	(265,0)  	4.907736
ST_C:	(264,0)  	4.927539
ST_C:	(263,0)  	4.947341
ST_C:	(262,0)  	4.967144
ST_C:	(261,0)  	4.986947
ST_C:	(260,0)  	5.006749
ST_C:	(259,0)  	5.026552
ST_C:	(258,0)  	5.046354
ST_C:	(257,0)  	5.066157
ST_C:	(256,0)  	5.085959
ST_C:	(255,0)  	5.105762
ST_E:	(254,0)  	5.125565
ST_M:	(254,77)  	5.125565
ST_M:	(253,76)  	3.821013
ST_M:	(252,75)  	4.233955
ST_M:	(251,74)  	2.562284
ST_M:	(250,73)  	1.023043
ST_M:	(249,72)  	2.741706
ST_M:	(248,71)  	1.481854
ST_M:	(247,70)  	-1.390261
ST_M:	(246,69)  	-3.634077
ST_M:	(245,68)  	-2.691329
ST_M:	(244,67)  	-4.436771
ST_M:	(243,66)  	-7.114577
ST_M:	(242,65)  	-8.751683
ST_M:	(241,64)  	-10.059674
ST_M:	(240,63)  	-10.493431
ST_I:	(239,62)  	-12.219860
ST_I:	(238,62)  	-11.447310
ST_I:	(237,62)  	-10.674761
ST_M:	(236,62)  	-6.516791
ST_M:	(235,61)  	-7.809477
ST_M:	(234,60)  	-7.861180
ST_M:	(233,59)  	-9.579681
ST_M:	(232,58)  	-10.732134
ST_M:	(231,57)  	-9.567002
ST_M:	(230,56)  	-9.932704
ST_M:	(229,55)  	-9.655857
ST_M:	(228,54)  	-11.978355
ST_M:	(227,53)  	-12.939013
ST_M:	(226,52)  	-14.024226
ST_M:	(225,51)  	-14.821575
ST_M:	(224,50)  	-15.274147
ST_M:	(223,49)  	-15.042430
ST_M:	(222,48)  	-14.971787
ST_M:	(221,47)  	-15.448234
ST_B:	(220,46)  	-8.288395
ST_N:	(220,46)  	-4.356569
ST_N:	(220,46)  	-4.356569
ST_N:	(219,46)  	-4.336766
ST_N:	(218,46)  	-4.316964
ST_N:	(217,46)  	-4.297161
ST_N:	(216,46)  	-4.277359
ST_N:	(215,46)  	-4.257556
ST_N:	(214,46)  	-4.237753
ST_N:	(213,46)  	-4.217951
ST_N:	(212,46)  	-4.198148
ST_N:	(211,46)  	-4.178346
ST_N:	(210,46)  	-4.158543
ST_N:	(209,46)  	-4.138741
ST_N:	(208,46)  	-4.118938
ST_N:	(207,46)  	-4.099135
ST_N:	(206,46)  	-4.079333
ST_N:	(205,46)  	-4.059530
ST_N:	(204,46)  	-4.039728
ST_N:	(203,46)  	-4.019925
ST_N:	(202,46)  	-4.000123
ST_N:	(201,46)  	-3.980320
ST_N:	(200,46)  	-3.960517
ST_N:	(199,46)  	-3.940715
ST_N:	(198,46)  	-3.920912
ST_N:	(197,46)  	-3.901109
ST_N:	(196,46)  	-3.881307
ST_N:	(195,46)  	-3.861504
ST_N:	(194,46)  	-3.841702
ST_N:	(193,46)  	-3.821899
ST_N:	(192,46)  	-3.802097
ST_N:	(191,46)  	-3.782294
ST_N:	(190,46)  	-3.762491
ST_N:	(189,46)  	-3.742689
ST_N:	(188,46)  	-3.722886
ST_N:	(187,46)  	-3.703084
ST_N:	(186,46)  	-3.683281
ST_N:	(185,46)  	-3.663479
ST_N:	(184,46)  	-3.643676
ST_N:	(183,46)  	-3.623873
ST_N:	(182,46)  	-3.604071
ST_N:	(181,46)  	-3.584268
ST_N:	(180,46)  	-3.564466
ST_N:	(179,46)  	-3.544663
ST_N:	(178,46)  	-3.524861
ST_N:	(177,46)  	-3.505058
ST_N:	(176,46)  	-3.485255
ST_N:	(175,46)  	-3.465453
ST_N:	(174,46)  	-3.445650
ST_N:	(173,46)  	-3.425848
ST_N:	(172,46)  	-3.406045
ST_N:	(171,46)  	-3.386243
ST_N:	(170,46)  	-3.366440
ST_N:	(169,46)  	-3.346637
ST_N:	(168,46)  	-3.326835
ST_N:	(167,46)  	-3.307032
ST_N:	(166,46)  	-3.287230
ST_N:	(165,46)  	-3.267427
ST_N:	(164,46)  	-3.247625
ST_N:	(163,46)  	-3.227822
ST_N:	(162,46)  	-3.208019
ST_N:	(161,46)  	-3.188217
ST_N:	(160,46)  	-3.168414
ST_N:	(159,46)  	-3.148612
ST_N:	(158,46)  	-3.128809
ST_N:	(157,46)  	-3.109007
ST_N:	(156,46)  	-3.089204
ST_N:	(155,46)  	-3.069402
ST_N:	(154,46)  	-3.049599
ST_N:	(153,46)  	-3.029796
ST_N:	(152,46)  	-3.009994
ST_N:	(151,46)  	-2.990191
ST_N:	(150,46)  	-2.970389
ST_N:	(149,46)  	-2.950586
ST_N:	(148,46)  	-2.930784
ST_N:	(147,46)  	-2.910981
ST_N:	(146,46)  	-2.891178
ST_N:	(145,46)  	-2.871376
ST_N:	(144,46)  	-2.851573
ST_N:	(143,46)  	-2.831771
ST_N:	(142,46)  	-2.811968
ST_N:	(141,46)  	-2.792166
ST_N:	(140,46)  	-2.772363
ST_N:	(139,46)  	-2.752560
ST_N:	(138,46)  	-2.732758
ST_N:	(137,46)  	-2.712955
ST_N:	(136,46)  	-2.693153
ST_N:	(135,46)  	-2.673350
ST_N:	(134,46)  	-2.653548
ST_N:	(133,46)  	-2.633745
ST_N:	(132,46)  	-2.613942
ST_N:	(131,46)  	-2.594140
ST_N:	(130,46)  	-2.574337
ST_N:	(129,46)  	-2.554535
ST_N:	(128,46)  	-2.534732
ST_N:	(127,46)  	-2.514930
ST_N:	(126,46)  	-2.495127
ST_N:	(125,46)  	-2.475324
ST_N:	(124,46)  	-2.455522
ST_N:	(123,46)  	-2.435719
ST_N:	(122,46)  	-2.415917
ST_N:	(121,46)  	-2.396114
ST_N:	(120,46)  	-2.376312
ST_N:	(119,46)  	-2.356509
ST_N:	(118,46)  	-2.336706
ST_N:	(117,46)  	-2.316904
ST_N:	(116,46)  	-2.297101
ST_N:	(115,46)  	-2.277299
ST_N:	(114,46)  	-2.257496
ST_N:	(113,46)  	-2.237694
ST_N:	(112,46)  	-2.217891
ST_N:	(111,46)  	-2.198088
ST_N:	(110,46)  	-2.178286
ST_N:	(109,46)  	-2.158483
ST_N:	(108,46)  	-2.138681
ST_N:	(107,46)  	-2.118878
ST_N:	(106,46)  	-2.099076
ST_N:	(105,46)  	-2.079273
ST_N:	(104,46)  	-2.059470
ST_N:	(103,46)  	-2.039668
ST_N:	(102,46)  	-2.019865
ST_N:	(101,46)  	-2.000063
ST_N:	(100,46)  	-1.980260
ST_N:	(99,46)  	-1.960457
ST_N:	(98,46)  	-1.940655
ST_N:	(97,46)  	-1.920852
ST_N:	(96,46)  	-1.901050
ST_N:	(95,46)  	-1.881247
ST_N:	(94,46)  	-1.861445
ST_N:	(93,46)  	-1.841642
ST_N:	(92,46)  	-1.821839
ST_N:	(91,46)  	-1.802037
ST_N:	(90,46)  	-1.782234
ST_N:	(89,46)  	-1.762432
ST_N:	(88,46)  	-1.742629
ST_N:	(87,46)  	-1.722827
ST_N:	(86,46)  	-1.703024
ST_N:	(85,46)  	-1.683221
ST_N:	(84,46)  	-1.663419
ST_N:	(83,46)  	-1.643616
ST_N:	(82,46)  	-1.623814
ST_N:	(81,46)  	-1.604011
ST_N:	(80,46)  	-1.584209
ST_N:	(79,46)  	-1.564406
ST_N:	(78,46)  	-1.544603
ST_N:	(77,46)  	-1.524801
ST_N:	(76,46)  	-1.504998
ST_N:	(75,46)  	-1.485196
ST_N:	(74,46)  	-1.465393
ST_N:	(73,46)  	-1.445591
ST_N:	(72,46)  	-1.425788
ST_N:	(71,46)  	-1.405985
ST_N:	(70,46)  	-1.386183
ST_N:	(69,46)  	-1.366380
ST_N:	(68,46)  	-1.346578
ST_N:	(67,46)  	-1.326775
ST_N:	(66,46)  	-1.306973
ST_N:	(65,46)  	-1.287170
ST_N:	(64,46)  	-1.267367
ST_N:	(63,46)  	-1.247565
ST_N:	(62,46)  	-1.227762
ST_N:	(61,46)  	-1.207960
ST_N:	(60,46)  	-1.188157
ST_N:	(59,46)  	-1.168355
ST_N:	(58,46)  	-1.148552
ST_N:	(57,46)  	-1.128749
ST_N:	(56,46)  	-1.108947
ST_N:	(55,46)  	-1.089144
ST_N:	(54,46)  	-1.069342
ST_N:	(53,46)  	-1.049539
ST_N:	(52,46)  	-1.029737
ST_N:	(51,46)  	-1.009934
ST_N:	(50,46)  	-0.990131
ST_N:	(49,46)  	-0.970329
ST_N:	(48,46)  	-0.950526
ST_N:	(47,46)  	-0.930724
ST_N:	(46,46)  	-0.910921
ST_N:	(45,46)  	-0.891118
ST_N:	(44,46)  	-0.871316
ST_N:	(43,46)  	-0.851513
ST_N:	(42,46)  	-0.831710
ST_N:	(41,46)  	-0.811908
ST_N:	(40,46)  	-0.792105
ST_N:	(39,46)  	-0.772303
ST_N:	(38,46)  	-0.752500
ST_N:	(37,46)  	-0.732697
ST_N:	(36,46)  	-0.712895
ST_N:	(35,46)  	-0.693092
ST_N:	(34,46)  	-0.673289
ST_N:	(33,46)  	-0.653487
ST_N:	(32,46)  	-0.633684
ST_N:	(31,46)  	-0.613881
ST_N:	(30,46)  	-0.594079
ST_N:	(29,46)  	-0.574276
ST_N:	(28,46)  	-0.554474
ST_N:	(27,46)  	-0.534671
ST_N:	(26,46)  	-0.514868
ST_N:	(25,46)  	-0.495066
ST_N:	(24,46)  	-0.475263
ST_N:	(23,46)  	-0.455460
ST_N:	(22,46)  	-0.435658
ST_N:	(21,46)  	-0.415855
ST_N:	(20,46)  	-0.396053
ST_N:	(19,46)  	-0.376250
ST_N:	(18,46)  	-0.356447
ST_N:	(17,46)  	-0.336645
ST_N:	(16,46)  	-0.316842
ST_N:	(15,46)  	-0.297039
ST_N:	(14,46)  	-0.277237
ST_N:	(13,46)  	-0.257434
ST_N:	(12,46)  	-0.237632
ST_N:	(11,46)  	-0.217829
ST_N:	(10,46)  	-0.198026
ST_N:	(9,46)  	-0.178224
ST_N:	(8,46)  	-0.158421
ST_N:	(7,46)  	-0.138618
ST_N:	(6,46)  	-0.118816
ST_N:	(5,46)  	-0.099013
ST_N:	(4,46)  	-0.079211
ST_N:	(3,46)  	-0.059408
ST_N:	(2,46)  	-0.039605
ST_N:	(1,46)  	-0.019803
ST_S:	(0,46)  	0.000000
START: (221,47) -> END: (254,77)
=== TRACEBACK -> END ===

=== FORWARD -> START ===
Forward Score: 5.065457
=== FORWARD -> END ===

=== BACKWARD -> START ===
Backward Score: 5.065335
=== BACKWARD -> END ===

using naive algs...
=== TEST -> START ===
TRACEBACK START: (221, 47)
MATRIX DIMS: (Q=287, T=87)
SUBMATRIX DIMS: (Q=66, T=40)
d: 268, num_cells: 1
268: -> edg[221, 222] -> bounds[221, 222]
d: 269, num_cells: 2
269: -> edg[221, 223] -> bounds[221, 223]
d: 270, num_cells: 3
270: -> edg[221, 224] -> bounds[221, 224]
d: 271, num_cells: 4
271: -> edg[221, 225] -> bounds[221, 225]
d: 272, num_cells: 5
272: -> edg[221, 226] -> bounds[221, 226]
d: 273, num_cells: 6
273: -> edg[221, 227] -> bounds[221, 227]
d: 274, num_cells: 7
274: -> edg[221, 228] -> bounds[221, 228]
d: 275, num_cells: 8
275: -> edg[221, 229] -> bounds[221, 229]
d: 276, num_cells: 9
276: -> edg[221, 230] -> bounds[221, 230]
d: 277, num_cells: 10
277: -> edg[221, 231] -> bounds[221, 231]
d: 278, num_cells: 11
278: -> edg[221, 232] -> bounds[221, 232]
d: 279, num_cells: 12
279: -> edg[221, 233] -> bounds[221, 233]
d: 280, num_cells: 13
280: -> edg[221, 234] -> bounds[221, 234]
d: 281, num_cells: 14
281: -> edg[221, 235] -> bounds[221, 235]
d: 282, num_cells: 15
282: -> edg[221, 236] -> bounds[221, 236]
d: 283, num_cells: 16
283: -> edg[221, 237] -> bounds[221, 237]
d: 284, num_cells: 17
284: -> edg[221, 238] -> bounds[221, 238]
d: 285, num_cells: 18
285: -> edg[221, 239] -> bounds[221, 239]
d: 286, num_cells: 19
286: -> edg[221, 240] -> bounds[221, 240]
d: 287, num_cells: 20
287: -> edg[221, 241] -> bounds[221, 241]
d: 288, num_cells: 21
288: -> edg[221, 242] -> bounds[221, 242]
d: 289, num_cells: 22
289: -> edg[221, 243] -> bounds[221, 243]
d: 290, num_cells: 23
290: -> edg[221, 244] -> bounds[221, 244]
d: 291, num_cells: 24
291: -> edg[221, 245] -> bounds[221, 245]
d: 292, num_cells: 25
292: -> edg[221, 246] -> bounds[221, 246]
d: 293, num_cells: 26
293: -> edg[221, 247] -> bounds[221, 247]
d: 294, num_cells: 27
294: -> edg[221, 248] -> bounds[221, 248]
d: 295, num_cells: 28
295: -> edg[221, 249] -> bounds[221, 249]
d: 296, num_cells: 29
296: -> edg[221, 250] -> bounds[221, 250]
d: 297, num_cells: 30
297: -> edg[221, 251] -> bounds[221, 251]
d: 298, num_cells: 31
298: -> edg[221, 252] -> bounds[221, 252]
d: 299, num_cells: 32
299: -> edg[221, 253] -> bounds[221, 253]
d: 300, num_cells: 33
300: -> edg[221, 254] -> bounds[221, 254]
d: 301, num_cells: 34
301: -> edg[221, 255] -> bounds[221, 255]
d: 302, num_cells: 35
302: -> edg[221, 256] -> bounds[221, 256]
d: 303, num_cells: 36
303: -> edg[221, 257] -> bounds[221, 257]
d: 304, num_cells: 37
304: -> edg[221, 258] -> bounds[221, 258]
d: 305, num_cells: 38
305: -> edg[221, 259] -> bounds[221, 259]
d: 306, num_cells: 39
306: -> edg[221, 260] -> bounds[221, 260]
d: 307, num_cells: 40
307: -> edg[221, 261] -> bounds[221, 261]
d: 308, num_cells: 41
308: -> edg[221, 262] -> bounds[221, 262]
d: 309, num_cells: 41
END growing => dim_min: 308, d: 309, num_cells: 41
309: -> edg[222, 263] -> bounds[222, 263]
d: 310, num_cells: 41
310: -> edg[223, 264] -> bounds[223, 264]
d: 311, num_cells: 41
311: -> edg[224, 265] -> bounds[224, 265]
d: 312, num_cells: 41
312: -> edg[225, 266] -> bounds[225, 266]
d: 313, num_cells: 41
313: -> edg[226, 267] -> bounds[226, 267]
d: 314, num_cells: 41
314: -> edg[227, 268] -> bounds[227, 268]
d: 315, num_cells: 41
315: -> edg[228, 269] -> bounds[228, 269]
d: 316, num_cells: 41
316: -> edg[229, 270] -> bounds[229, 270]
d: 317, num_cells: 41
317: -> edg[230, 271] -> bounds[230, 271]
d: 318, num_cells: 41
318: -> edg[231, 272] -> bounds[231, 272]
d: 319, num_cells: 41
319: -> edg[232, 273] -> bounds[232, 273]
d: 320, num_cells: 41
320: -> edg[233, 274] -> bounds[233, 274]
d: 321, num_cells: 41
321: -> edg[234, 275] -> bounds[234, 275]
d: 322, num_cells: 41
322: -> edg[235, 276] -> bounds[235, 276]
d: 323, num_cells: 41
323: -> edg[236, 277] -> bounds[236, 277]
d: 324, num_cells: 41
324: -> edg[237, 278] -> bounds[237, 278]
d: 325, num_cells: 41
325: -> edg[238, 279] -> bounds[238, 279]
d: 326, num_cells: 41
326: -> edg[239, 280] -> bounds[239, 280]
d: 327, num_cells: 41
327: -> edg[240, 281] -> bounds[240, 281]
d: 328, num_cells: 41
328: -> edg[241, 282] -> bounds[241, 282]
d: 329, num_cells: 41
329: -> edg[242, 283] -> bounds[242, 283]
d: 330, num_cells: 41
330: -> edg[243, 284] -> bounds[243, 284]
d: 331, num_cells: 41
331: -> edg[244, 285] -> bounds[244, 285]
d: 332, num_cells: 41
332: -> edg[245, 286] -> bounds[245, 286]
d: 333, num_cells: 41
333: -> edg[246, 287] -> bounds[246, 287]
d: 334, num_cells: 41
334: -> edg[247, 288] -> bounds[247, 288]
d: 335, num_cells: 40
START shrinking => dim_max: 334, d: 335, num_cells: 40
335: -> edg[248, 288] -> bounds[248, 288]
d: 336, num_cells: 39
336: -> edg[249, 288] -> bounds[249, 288]
d: 337, num_cells: 38
337: -> edg[250, 288] -> bounds[250, 288]
d: 338, num_cells: 37
338: -> edg[251, 288] -> bounds[251, 288]
d: 339, num_cells: 36
339: -> edg[252, 288] -> bounds[252, 288]
d: 340, num_cells: 35
340: -> edg[253, 288] -> bounds[253, 288]
d: 341, num_cells: 34
341: -> edg[254, 288] -> bounds[254, 288]
d: 342, num_cells: 33
342: -> edg[255, 288] -> bounds[255, 288]
d: 343, num_cells: 32
343: -> edg[256, 288] -> bounds[256, 288]
d: 344, num_cells: 31
344: -> edg[257, 288] -> bounds[257, 288]
d: 345, num_cells: 30
345: -> edg[258, 288] -> bounds[258, 288]
d: 346, num_cells: 29
346: -> edg[259, 288] -> bounds[259, 288]
d: 347, num_cells: 28
347: -> edg[260, 288] -> bounds[260, 288]
d: 348, num_cells: 27
348: -> edg[261, 288] -> bounds[261, 288]
d: 349, num_cells: 26
349: -> edg[262, 288] -> bounds[262, 288]
d: 350, num_cells: 25
350: -> edg[263, 288] -> bounds[263, 288]
d: 351, num_cells: 24
351: -> edg[264, 288] -> bounds[264, 288]
d: 352, num_cells: 23
352: -> edg[265, 288] -> bounds[265, 288]
d: 353, num_cells: 22
353: -> edg[266, 288] -> bounds[266, 288]
d: 354, num_cells: 21
354: -> edg[267, 288] -> bounds[267, 288]
d: 355, num_cells: 20
355: -> edg[268, 288] -> bounds[268, 288]
d: 356, num_cells: 19
356: -> edg[269, 288] -> bounds[269, 288]
d: 357, num_cells: 18
357: -> edg[270, 288] -> bounds[270, 288]
d: 358, num_cells: 17
358: -> edg[271, 288] -> bounds[271, 288]
d: 359, num_cells: 16
359: -> edg[272, 288] -> bounds[272, 288]
d: 360, num_cells: 15
360: -> edg[273, 288] -> bounds[273, 288]
d: 361, num_cells: 14
361: -> edg[274, 288] -> bounds[274, 288]
d: 362, num_cells: 13
362: -> edg[275, 288] -> bounds[275, 288]
d: 363, num_cells: 12
363: -> edg[276, 288] -> bounds[276, 288]
d: 364, num_cells: 11
364: -> edg[277, 288] -> bounds[277, 288]
d: 365, num_cells: 10
365: -> edg[278, 288] -> bounds[278, 288]
d: 366, num_cells: 9
366: -> edg[279, 288] -> bounds[279, 288]
d: 367, num_cells: 8
367: -> edg[280, 288] -> bounds[280, 288]
d: 368, num_cells: 7
368: -> edg[281, 288] -> bounds[281, 288]
d: 369, num_cells: 6
369: -> edg[282, 288] -> bounds[282, 288]
d: 370, num_cells: 5
370: -> edg[283, 288] -> bounds[283, 288]
d: 371, num_cells: 4
371: -> edg[284, 288] -> bounds[284, 288]
d: 372, num_cells: 3
372: -> edg[285, 288] -> bounds[285, 288]
d: 373, num_cells: 2
373: -> edg[286, 288] -> bounds[286, 288]
d: 374, num_cells: 1
374: -> edg[287, 288] -> bounds[287, 288]
=== TEST -> END ===

=== CLOUD FORWARD -> START ===
d=268/374, num_cells=1
268: edg[221, 222] -> bounds[221, 222]
d=269/374, num_cells=2
269: edg[221, 223] -> bounds[221, 223]
d=270/374, num_cells=3
270: edg[221, 224] -> bounds[221, 224]
d=271/374, num_cells=4
271: edg[221, 225] -> bounds[221, 225]
d=272/374, num_cells=5
272: edg[221, 226] -> bounds[221, 226]
d=273/374, num_cells=6
273: edg[221, 227] -> bounds[221, 227]
d=274/374, num_cells=7
274: edg[221, 228] -> bounds[221, 228]
d=275/374, num_cells=8
275: edg[221, 229] -> bounds[221, 229]
d=276/374, num_cells=9
276: edg[221, 230] -> bounds[221, 230]
d=277/374, num_cells=10
277: edg[221, 231] -> bounds[221, 231]
d=278/374, num_cells=11
278: edg[221, 232] -> bounds[221, 232]
d=279/374, num_cells=12
279: edg[221, 233] -> bounds[221, 233]
d=280/374, num_cells=13
280: edg[221, 234] -> bounds[221, 234]
d=281/374, num_cells=14
281: edg[221, 235] -> bounds[221, 235]
d=282/374, num_cells=15
282: edg[221, 236] -> bounds[221, 236]
d=283/374, num_cells=16
283: edg[221, 237] -> bounds[221, 237]
d=284/374, num_cells=17
284: edg[221, 238] -> bounds[221, 238]
d=285/374, num_cells=18
285: edg[221, 239] -> bounds[221, 239]
d=286/374, num_cells=19
286: edg[221, 240] -> bounds[221, 240]
d=287/374, num_cells=20
287: edg[221, 241] -> bounds[221, 241]
d=288/374, num_cells=21
288: edg[221, 242] -> bounds[221, 242]
d=289/374, num_cells=22
289: edg[221, 243] -> bounds[221, 243]
d=290/374, num_cells=23
290: edg[221, 244] -> bounds[221, 244]
d=291/374, num_cells=24
291: edg[221, 245] -> bounds[221, 245]
d=292/374, num_cells=25
292: edg[221, 246] -> bounds[221, 246]
d=293/374, num_cells=26
293: edg[221, 247] -> bounds[221, 247]
d=294/374, num_cells=27
294: edg[221, 248] -> bounds[221, 248]
d=295/374, num_cells=28
295: edg[221, 249] -> bounds[221, 249]
d=296/374, num_cells=29
296: edg[221, 250] -> bounds[221, 250]
d=297/374, num_cells=30
297: edg[221, 251] -> bounds[221, 251]
d=298/374, num_cells=31
298: edg[221, 252] -> bounds[221, 252]
d=299/374, num_cells=32
299: edg[221, 253] -> bounds[221, 253]
d=300/374, num_cells=33
300: edg[221, 254] -> bounds[221, 254]
d=301/374, num_cells=34
301: edg[221, 255] -> bounds[221, 255]
d=302/374, num_cells=35
302: edg[221, 256] -> bounds[221, 256]
d=303/374, num_cells=36
303: edg[221, 257] -> bounds[221, 257]
d=304/374, num_cells=37
304: edg[221, 258] -> bounds[221, 258]
d=305/374, num_cells=38
305: edg[221, 259] -> bounds[221, 259]
d=306/374, num_cells=39
306: edg[221, 260] -> bounds[221, 260]
d=307/374, num_cells=40
307: edg[221, 261] -> bounds[221, 261]
d=308/374, num_cells=41
308: edg[221, 262] -> bounds[221, 262]
d=309/374, num_cells=41
309: edg[222, 263] -> bounds[222, 263]
d=310/374, num_cells=41
310: edg[223, 264] -> bounds[223, 264]
d=311/374, num_cells=41
311: edg[224, 265] -> bounds[224, 265]
d=312/374, num_cells=41
312: edg[225, 266] -> bounds[225, 266]
d=313/374, num_cells=41
313: edg[226, 267] -> bounds[226, 267]
d=314/374, num_cells=41
314: edg[227, 268] -> bounds[227, 268]
d=315/374, num_cells=41
315: edg[228, 269] -> bounds[228, 269]
d=316/374, num_cells=41
316: edg[229, 270] -> bounds[229, 270]
d=317/374, num_cells=41
317: edg[230, 271] -> bounds[230, 271]
d=318/374, num_cells=41
318: edg[231, 272] -> bounds[231, 272]
d=319/374, num_cells=41
319: edg[232, 273] -> bounds[232, 273]
d=320/374, num_cells=41
320: edg[233, 274] -> bounds[233, 274]
d=321/374, num_cells=41
321: edg[234, 275] -> bounds[234, 275]
d=322/374, num_cells=41
322: edg[235, 276] -> bounds[235, 276]
d=323/374, num_cells=41
323: edg[236, 277] -> bounds[236, 277]
d=324/374, num_cells=41
324: edg[237, 278] -> bounds[237, 278]
d=325/374, num_cells=41
325: edg[238, 279] -> bounds[238, 279]
d=326/374, num_cells=41
326: edg[239, 280] -> bounds[239, 280]
d=327/374, num_cells=41
327: edg[240, 281] -> bounds[240, 281]
d=328/374, num_cells=41
328: edg[241, 282] -> bounds[241, 282]
d=329/374, num_cells=41
329: edg[242, 283] -> bounds[242, 283]
d=330/374, num_cells=41
330: edg[243, 284] -> bounds[243, 284]
d=331/374, num_cells=41
331: edg[244, 285] -> bounds[244, 285]
d=332/374, num_cells=41
332: edg[245, 286] -> bounds[245, 286]
d=333/374, num_cells=41
333: edg[246, 287] -> bounds[246, 287]
d=334/374, num_cells=41
334: edg[247, 288] -> bounds[247, 288]
d=335/374, num_cells=40
335: edg[248, 288] -> bounds[248, 288]
d=336/374, num_cells=39
336: edg[249, 288] -> bounds[249, 288]
d=337/374, num_cells=38
337: edg[250, 288] -> bounds[250, 288]
d=338/374, num_cells=37
338: edg[251, 288] -> bounds[251, 288]
d=339/374, num_cells=36
339: edg[252, 288] -> bounds[252, 288]
d=340/374, num_cells=35
340: edg[253, 288] -> bounds[253, 288]
d=341/374, num_cells=34
341: edg[254, 288] -> bounds[254, 288]
d=342/374, num_cells=33
342: edg[255, 288] -> bounds[255, 288]
d=343/374, num_cells=32
343: edg[256, 288] -> bounds[256, 288]
d=344/374, num_cells=31
344: edg[257, 288] -> bounds[257, 288]
d=345/374, num_cells=30
345: edg[258, 288] -> bounds[258, 288]
d=346/374, num_cells=29
346: edg[259, 288] -> bounds[259, 288]
d=347/374, num_cells=28
347: edg[260, 288] -> bounds[260, 288]
d=348/374, num_cells=27
348: edg[261, 288] -> bounds[261, 288]
d=349/374, num_cells=26
349: edg[262, 288] -> bounds[262, 288]
d=350/374, num_cells=25
350: edg[263, 288] -> bounds[263, 288]
d=351/374, num_cells=24
351: edg[264, 288] -> bounds[264, 288]
d=352/374, num_cells=23
352: edg[265, 288] -> bounds[265, 288]
d=353/374, num_cells=22
353: edg[266, 288] -> bounds[266, 288]
d=354/374, num_cells=21
354: edg[267, 288] -> bounds[267, 288]
d=355/374, num_cells=20
355: edg[268, 288] -> bounds[268, 288]
d=356/374, num_cells=19
356: edg[269, 288] -> bounds[269, 288]
d=357/374, num_cells=18
357: edg[270, 288] -> bounds[270, 288]
d=358/374, num_cells=17
358: edg[271, 288] -> bounds[271, 288]
d=359/374, num_cells=16
359: edg[272, 288] -> bounds[272, 288]
d=360/374, num_cells=15
360: edg[273, 288] -> bounds[273, 288]
d=361/374, num_cells=14
361: edg[274, 288] -> bounds[274, 288]
d=362/374, num_cells=13
362: edg[275, 288] -> bounds[275, 288]
d=363/374, num_cells=12
363: edg[276, 288] -> bounds[276, 288]
d=364/374, num_cells=11
364: edg[277, 288] -> bounds[277, 288]
d=365/374, num_cells=10
365: edg[278, 288] -> bounds[278, 288]
d=366/374, num_cells=9
366: edg[279, 288] -> bounds[279, 288]
d=367/374, num_cells=8
367: edg[280, 288] -> bounds[280, 288]
d=368/374, num_cells=7
368: edg[281, 288] -> bounds[281, 288]
d=369/374, num_cells=6
369: edg[282, 288] -> bounds[282, 288]
d=370/374, num_cells=5
370: edg[283, 288] -> bounds[283, 288]
d=371/374, num_cells=4
371: edg[284, 288] -> bounds[284, 288]
d=372/374, num_cells=3
372: edg[285, 288] -> bounds[285, 288]
d=373/374, num_cells=2
373: edg[286, 288] -> bounds[286, 288]
d=374/374, num_cells=1
374: edg[287, 288] -> bounds[287, 288]
=== CLOUD FORWARD -> END ===

=== CLOUD BACKWARD -> START ===
T=87, Q=287, alpha=30.0, beta=5
resizing bounds...
resizing bounds...
=== CLOUD BACKWARD -> END ===

=== MERGE & REORIENT CLOUD -> START ===
Perc. Total Cells Computed = 9343/25344 = 0.368647
Perc. Window Cells Computed = 9343/990 = 9.437374
=== MERGE & REORIENT CLOUD -> END ===

=== BOUNDED FORWARD -> START ===
Bounded Forward Score: 5.059660
=== BOUNDED FORWARD -> END ===

=== BOUNDED BACKWARD -> START ===
Bounded Backward Score: 5.059430
=== BOUNDED BACKWARD -> END ===

...test finished. 
